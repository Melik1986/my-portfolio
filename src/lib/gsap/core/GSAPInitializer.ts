'use client';

import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import { SplitText } from 'gsap/SplitText';
import { ScrollSmoother } from 'gsap/ScrollSmoother';
import { ScrollToPlugin } from 'gsap/ScrollToPlugin';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSAP
 */
interface GSAPInitConfig {
  timeout?: number;
  retryAttempts?: number;
  retryDelay?: number;
  enableFallback?: boolean;
  plugins?: string[];
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSAP
 */
interface GSAPInitResult {
  success: boolean;
  gsapAvailable: boolean;
  pluginsLoaded: string[];
  errors: string[];
  fallbackActive: boolean;
}

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSAP —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */
export class GSAPInitializer {
  private static instance: GSAPInitializer;
  private isInitialized = false;
  private initPromise: Promise<GSAPInitResult> | null = null;
  private config: Required<GSAPInitConfig>;
  private fallbackMode = false;

  private constructor() {
    this.config = {
      timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥
      retryAttempts: 3,
      retryDelay: 1000,
      enableFallback: true,
      plugins: ['ScrollTrigger', 'SplitText', 'ScrollSmoother', 'ScrollToPlugin'],
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ singleton —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
   */
  public static getInstance(): GSAPInitializer {
    if (!GSAPInitializer.instance) {
      GSAPInitializer.instance = new GSAPInitializer();
    }
    return GSAPInitializer.instance;
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSAP
   */
  public async initialize(customConfig?: Partial<GSAPInitConfig>): Promise<GSAPInitResult> {
    // –ï—Å–ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–º–∏—Å
    if (this.initPromise) {
      return this.initPromise;
    }

    // –ï—Å–ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (this.isInitialized) {
      return this.getSuccessResult();
    }

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if (customConfig) {
      this.config = { ...this.config, ...customConfig };
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    this.initPromise = this.performInitialization();
    
    try {
      const result = await this.initPromise;
      this.isInitialized = result.success;
      return result;
    } catch (error) {
      this.initPromise = null;
      throw error;
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
   */
  private async performInitialization(): Promise<GSAPInitResult> {
    let lastError: Error | null = null;
    
    for (let attempt = 1; attempt <= this.config.retryAttempts; attempt++) {
      try {
        console.log(`üé¨ GSAP –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${this.config.retryAttempts}`);
        
        const result = await this.attemptInitialization();
        
        if (result.success) {
          console.log('‚úÖ GSAP —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
          return result;
        }
        
        throw new Error(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: ${result.errors.join(', ')}`);
        
      } catch (error) {
        lastError = error instanceof Error ? error : new Error(String(error));
        console.warn(`‚ö†Ô∏è GSAP –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, lastError.message);
        
        // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π)
        if (attempt < this.config.retryAttempts) {
          await this.delay(this.config.retryDelay);
        }
      }
    }

    // –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º fallback
    if (this.config.enableFallback) {
      console.warn('üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è fallback —Ä–µ–∂–∏–º–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π');
      return this.activateFallback(lastError);
    }

    throw lastError || new Error('GSAP –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
  }

  /**
   * –û–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSAP
   */
  private async attemptInitialization(): Promise<GSAPInitResult> {
    const result: GSAPInitResult = {
      success: false,
      gsapAvailable: false,
      pluginsLoaded: [],
      errors: [],
      fallbackActive: false,
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GSAP —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    const gsapCheck = await this.withTimeout(
      this.checkGSAPAvailability(),
      this.config.timeout,
      'GSAP –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ —Ç–∞–π–º–∞—É—Ç'
    );

    if (!gsapCheck.available) {
      result.errors.push(gsapCheck.error || 'GSAP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return result;
    }

    result.gsapAvailable = true;

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GSAP
    await this.forceGSAPInitialization();

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
    const pluginResults = await this.registerPlugins();
    result.pluginsLoaded = pluginResults.loaded;
    result.errors.push(...pluginResults.errors);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DOM
    await this.ensureDOMReady();

    result.success = result.gsapAvailable && result.errors.length === 0;
    return result;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GSAP
   */
  private async checkGSAPAvailability(): Promise<{ available: boolean; error?: string }> {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç GSAP
      if (typeof gsap === 'undefined' || !gsap) {
        return { available: false, error: 'GSAP –æ–±—ä–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' };
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç–æ–¥—ã
      if (typeof gsap.registerPlugin !== 'function') {
        return { available: false, error: 'GSAP.registerPlugin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' };
      }

      if (typeof gsap.timeline !== 'function') {
        return { available: false, error: 'GSAP.timeline –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' };
      }

      // –¢–µ—Å—Ç–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
      const testElement = document.createElement('div');
      const testTween = gsap.to(testElement, { duration: 0.01, x: 1 });
      testTween.kill();

      return { available: true };
    } catch (error) {
      return {
        available: false,
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ GSAP'
      };
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GSAP
   */
  private async forceGSAPInitialization(): Promise<void> {
    try {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GSAP
      gsap.config({
        nullTargetWarn: false,

        force3D: true,
      });

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      gsap.defaults({
        duration: 0.8,
        ease: 'power2.out',
      });

      console.log('üîß GSAP –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSAP:', error);
      throw error;
    }
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤ GSAP
   */
  private async registerPlugins(): Promise<{ loaded: string[]; errors: string[] }> {
    const loaded: string[] = [];
    const errors: string[] = [];

    const pluginMap = {
      ScrollTrigger,
      SplitText,
      ScrollSmoother,
      ScrollToPlugin,
    };

    for (const pluginName of this.config.plugins) {
      try {
        const plugin = pluginMap[pluginName as keyof typeof pluginMap];
        if (plugin) {
          gsap.registerPlugin(plugin);
          loaded.push(pluginName);
          console.log(`‚úÖ –ü–ª–∞–≥–∏–Ω ${pluginName} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω`);
        } else {
          errors.push(`–ü–ª–∞–≥–∏–Ω ${pluginName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
      } catch (error) {
        const errorMsg = `–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞ ${pluginName}: ${error}`;
        errors.push(errorMsg);
        console.warn('‚ö†Ô∏è', errorMsg);
      }
    }

    return { loaded, errors };
  }

  /**
   * –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
   */
  private async ensureDOMReady(): Promise<void> {
    return new Promise((resolve) => {
      if (document.readyState === 'complete') {
        resolve();
        return;
      }

      const handleReady = () => {
        document.removeEventListener('DOMContentLoaded', handleReady);
        window.removeEventListener('load', handleReady);
        resolve();
      };

      document.addEventListener('DOMContentLoaded', handleReady);
      window.addEventListener('load', handleReady);

      // Fallback —Ç–∞–π–º–∞—É—Ç
      setTimeout(resolve, 5000);
    });
  }

  /**
   * –ê–∫—Ç–∏–≤–∞—Ü–∏—è fallback —Ä–µ–∂–∏–º–∞
   */
  private activateFallback(error: Error | null): GSAPInitResult {
    this.fallbackMode = true;
    
    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∫–ª–∞—Å—Å –¥–ª—è fallback –∞–Ω–∏–º–∞—Ü–∏–π
    document.documentElement.classList.add('gsap-fallback');
    
    console.warn('üîÑ Fallback —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è CSS –∞–Ω–∏–º–∞—Ü–∏–∏.');
    
    return {
      success: true, // –°—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º, —Ç–∞–∫ –∫–∞–∫ fallback —Ä–∞–±–æ—Ç–∞–µ—Ç
      gsapAvailable: false,
      pluginsLoaded: [],
      errors: [error?.message || 'GSAP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'],
      fallbackActive: true,
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ GSAP
   */
  private getSuccessResult(): GSAPInitResult {
    return {
      success: true,
      gsapAvailable: !this.fallbackMode,
      pluginsLoaded: this.config.plugins,
      errors: [],
      fallbackActive: this.fallbackMode,
    };
  }

  /**
   * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
   */
  private withTimeout<T>(promise: Promise<T>, timeout: number, errorMessage: string): Promise<T> {
    return Promise.race([
      promise,
      new Promise<never>((_, reject) => {
        setTimeout(() => reject(new Error(errorMessage)), timeout);
      }),
    ]);
  }

  /**
   * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
   */
  private delay(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –≤ fallback —Ä–µ–∂–∏–º–µ
   */
  public isFallbackMode(): boolean {
    return this.fallbackMode;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ GSAP
   */
  public isGSAPReady(): boolean {
    return this.isInitialized;
  }

  /**
   * –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–¥–ª—è —Ç–µ—Å—Ç–æ–≤)
   */
  public reset(): void {
    this.isInitialized = false;
    this.initPromise = null;
    this.fallbackMode = false;
    document.documentElement.classList.remove('gsap-fallback');
  }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç singleton —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
 */
export const gsapInitializer = GSAPInitializer.getInstance();

/**
 * –•–µ–ª–ø–µ—Ä —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 */
export async function initializeGSAP(config?: Partial<GSAPInitConfig>): Promise<GSAPInitResult> {
  return gsapInitializer.initialize(config);
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ GSAP
 */
export function isGSAPReady(): boolean {
  return gsapInitializer.isGSAPReady();
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ fallback —Ä–µ–∂–∏–º–∞
 */
export function isGSAPFallback(): boolean {
  return gsapInitializer.isFallbackMode();
}